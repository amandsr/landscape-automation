name: 'Terraform Create Workflow'
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: 'us-east-1'
    TF_VAR_ssh_public_key: ${{ secrets.TF_VAR_ssh_public_key }}
    TF_VAR_BACKEND_BUCKET: ${{ secrets.TF_VAR_BACKEND_BUCKET }}
    TF_VAR_BACKEND_KEY: ${{ secrets.TF_VAR_BACKEND_KEY }}
    
on:
  workflow_dispatch:
  #push:
  #  branches: 
  #    - main

permissions:
  actions: write
  contents: write

jobs:
  terraform_validate:
    name: 'Terraform Init'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        
      - name: Terraform Init
        run: |
          terraform -chdir=./terraform init \
            -backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.TF_BACKEND_KEY }}"
        
      - name: Terraform fmt
        run: terraform fmt
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: terraform_validate  # Ensure this job runs after the init job
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        
      - name: Terraform Init
        run: |
          terraform -chdir=./terraform init \
            -backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.TF_BACKEND_KEY }}"
        
      - name: Terraform Plan
        run: terraform plan -input=false
        working-directory: ./terraform

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform_plan  # Ensure this job runs after the plan job
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: |
          terraform -chdir=./terraform init \
            -backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.TF_BACKEND_KEY }}"

      - name: Terraform Plan
        run: terraform plan -input=false
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        working-directory: ./terraform

      - name: Export EC2 DNS to GitHub variable
        run: |
             echo "${{ secrets.GH_PAT }}" | gh auth login --with-token
             DNS=$(terraform output -raw ec2_public_dns)
             gh variable set EC2_PUBLIC_DNS --body "$DNS"

      - name: Export EC2 Public IP to GitHub variable
        run: |
             echo "${{ secrets.GH_PAT }}" | gh auth login --with-token
             PUBLIC_IP=$(terraform output -raw ec2_public_ip)
             gh variable set EC2_PUBLIC_IP --body "$PUBLIC_IP"
