name: 'Terraform Client Destroy'
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: 'us-east-1'
    TF_VAR_ssh_public_key: ${{ secrets.TF_VAR_ssh_public_key }}
    TF_VAR_BACKEND_BUCKET: ${{ secrets.TF_VAR_BACKEND_BUCKET }}
    TF_VAR_BACKEND_KEY: ${{ secrets.TF_VAR_CLIENT_BACKEND_KEY }}

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check-terraform-create:
    name: Check "Landscape client provisioning" Success
    runs-on: ubuntu-latest
    steps:
      - name: Check last successful run of "Landscape client provisioning"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Checking last successful run of 'Landscape client provisioning'"
          gh run list \
            --repo "${{ github.repository }}" \
            --workflow="Landscape client provisioning" \
            --limit 1 \
            --json status,conclusion \
            --jq '.[0] | select(.status == "completed" and .conclusion == "success")' || {
            echo "‚ùå Last run of Landscape client provisioning did not succeed."
            exit 1
            }

  terraform_validate:
    name: 'Terraform Init'
    runs-on: ubuntu-latest
    needs: check-terraform-create
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        
      - name: Terraform Init
        run: |
          terraform -chdir=./terraform-client init \
            -backend-config="bucket=${{ secrets.TF_VAR_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.TF_VAR_CLIENT_BACKEND_KEY }}"
        
      - name: Terraform fmt
        run: terraform fmt
        working-directory: ./terraform-client

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform-client

  terraform_destroy_plan:
    name: 'Terraform Destroy Plan'
    runs-on: ubuntu-latest
    needs: terraform_validate  # Ensure this job runs after the init job
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        
      - name: Terraform Init
        run: |
          terraform -chdir=./terraform-client init \
            -backend-config="bucket=${{ secrets.TF_VAR_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.TF_VAR_CLIENT_BACKEND_KEY }}"

      - name: Terraform Destroy Plan
        run:  terraform plan -destroy -input=false
        working-directory: ./terraform-client

  terraform_destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    needs: terraform_destroy_plan
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: |
          terraform -chdir=./terraform-client init \
            -backend-config="bucket=${{ secrets.TF_VAR_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.TF_VAR_CLIENT_BACKEND_KEY }}"

      - name: Terraform Plan
        run: terraform plan -destroy
        working-directory: ./terraform-client

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false
        working-directory: ./terraform-client
